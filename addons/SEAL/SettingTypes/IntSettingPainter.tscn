[gd_scene load_steps=3 format=3 uid="uid://bhk4qyf0kgrwe"]

[ext_resource type="PackedScene" uid="uid://bh8x54mstorgq" path="res://addons/SEAL/SettingTypes/BaseSetting.tscn" id="1_a3e54"]

[sub_resource type="GDScript" id="1"]
script/source = "extends SettingsPainter

var _value_box:LineEdit

var _last_valid_value:int

func _init() -> void:
	update_visuals_method = update_visuals

func update_visuals():
	_value_box = $ValueGroup/ValueBox
	_value_box.text = str(setting.value) + setting.unit


func _on_value_changed():
	var trimmed = _value_box.text.trim_suffix(setting.unit)
	if trimmed.is_valid_int(): 
		var val:int
		if int(trimmed)<setting.min_val:
			val = setting.min_val
		elif int(trimmed)>setting.max_val:
			val=setting.max_val
		else:
			val = int(trimmed)
		setting.value = val
		_last_valid_value = val
	elif _value_box.text == setting.unit:
		_last_valid_value = 0
	else:
		var c_pos = _value_box.caret_column
		_value_box.text = str(_last_valid_value) + setting.unit
		_value_box.caret_column = min(_value_box.text.length(), c_pos)


func _on_value_box_focus_exited():
	if _value_box.text == \"\":
		setting.value = 0
"

[node name="BoolSetting" instance=ExtResource("1_a3e54")]
script = SubResource("1")

[node name="ValueBox" type="LineEdit" parent="ValueGroup" index="0"]
layout_mode = 2
focus_mode = 1

[connection signal="focus_exited" from="ValueGroup/ValueBox" to="." method="_on_value_box_focus_exited"]
[connection signal="text_changed" from="ValueGroup/ValueBox" to="." method="_on_value_changed"]
