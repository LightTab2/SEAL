[gd_scene load_steps=7 format=3 uid="uid://civq7vlw6wx7j"]

[ext_resource type="PackedScene" uid="uid://bh8x54mstorgq" path="res://addons/SEAL/painters/AbstractSettingsPainter.tscn" id="1_1p6xf"]
[ext_resource type="Texture2D" uid="uid://cwdl3ln028ffo" path="res://addons/SEAL/painters/Shift.png" id="2_6hi8n"]
[ext_resource type="Texture2D" uid="uid://b2ncf6421urv5" path="res://addons/SEAL/painters/Ctrl.png" id="3_1s8la"]
[ext_resource type="Texture2D" uid="uid://dbvo36a4pwaoc" path="res://addons/SEAL/painters/Alt.png" id="4_ke42t"]

[sub_resource type="GDScript" id="1"]
script/source = "extends AbstractSettingsPainter

@onready var _button:Button = $ValueGroup/VBoxContainer/Button
@onready var _shift_icon:TextureRect = $ValueGroup/VBoxContainer/HBoxContainer/ShiftIcon
@onready var _control_icon:TextureRect = $ValueGroup/VBoxContainer/HBoxContainer/CtrlIcon
@onready var _alt_icon:TextureRect = $ValueGroup/VBoxContainer/HBoxContainer/AltIcon

const _modifier_enabled_color := Color.WHITE
const _modifier_disabled_color := Color.DARK_GRAY




func _on_button_toggled(_pressed:bool):
	if _pressed || _proxy_value.keycode == KEY_NONE:#If we click out to unset the key.
		_proxy_value.keycode = KEY_NONE
		_proxy_value.shift_pressed = false
		_proxy_value.ctrl_pressed = false
		_proxy_value.alt_pressed = false
	update_visuals()


func update_visuals():
	if !_button.button_pressed && _proxy_value.keycode == KEY_NONE: #AKA not recording presses and not having any value, AKA key is disabled.
		_button.text = tr(\"None\")
		_shift_icon.tooltip_text = \"N/A\"
		_control_icon.tooltip_text = \"N/A\"
		_alt_icon.tooltip_text = \"N/A\"
	else:#AKA either recording or key is set.
		_button.text = tr(\"Press any key\") if _button.button_pressed else OS.get_keycode_string(_proxy_value.keycode)
		_shift_icon.tooltip_text = tr(\"requires shift modifier\") + \": \" +tr(\"yes\" if _proxy_value.shift_pressed else \"no\")
		_control_icon.tooltip_text = tr(\"requires control (command on OSX devices) modifier\") + \": \" +tr(\"yes\" if _proxy_value.ctrl_pressed else \"no\")
		_alt_icon.tooltip_text = tr(\"requires alt modifier\") + \": \" +tr(\"yes\" if _proxy_value.alt_pressed else \"no\")
	
	_shift_icon.modulate = _modifier_enabled_color if _proxy_value.shift_pressed else _modifier_disabled_color
	_alt_icon.modulate = _modifier_enabled_color if _proxy_value.alt_pressed else _modifier_disabled_color
	_control_icon.modulate = _modifier_enabled_color if _proxy_value.ctrl_pressed else _modifier_disabled_color


func _unhandled_key_input(event):
	if (_button != null):
		if _button.button_pressed:#AKA recording
			var code = event.keycode
			if code == KEY_SHIFT:#we either pressed or released shift
				_proxy_value.shift_pressed = event.pressed
			elif code == KEY_CTRL:#we either pressed or released ctrl
				_proxy_value.ctrl_pressed = event.pressed
			elif code == KEY_ALT:#we either pressed or released alt
				_proxy_value.alt_pressed = event.pressed
			else:#key is not a modifier, exit key recording and mark key as the new key code.
				_proxy_value.keycode = event.keycode
				_button.button_pressed = false
			update_visuals()#resync visuals with setting value


func _on_focus_exit():
	_button.button_pressed = false
"

[sub_resource type="StyleBoxEmpty" id="StyleBoxEmpty_vakwb"]

[node name="KeySettingsPainter" instance=ExtResource("1_1p6xf")]
offset_right = 546.0
offset_bottom = 390.0
script = SubResource("1")

[node name="VBoxContainer" type="VBoxContainer" parent="ValueGroup" index="0"]
layout_mode = 2

[node name="Button" type="Button" parent="ValueGroup/VBoxContainer" index="0"]
layout_mode = 2
tooltip_text = "Press to change hotkey. Hold down shift, ctrl(command on OSX devices) and/or alt before pressing the key to make the relevant modifier required. Press the button again to disable hotkey."
theme_override_styles/focus = SubResource("StyleBoxEmpty_vakwb")
toggle_mode = true
text = "None"

[node name="HBoxContainer" type="HBoxContainer" parent="ValueGroup/VBoxContainer" index="1"]
layout_mode = 2

[node name="ShiftIcon" type="TextureRect" parent="ValueGroup/VBoxContainer/HBoxContainer" index="0"]
custom_minimum_size = Vector2(75, 50)
layout_mode = 2
texture = ExtResource("2_6hi8n")
expand_mode = 1
stretch_mode = 6

[node name="CtrlIcon" type="TextureRect" parent="ValueGroup/VBoxContainer/HBoxContainer" index="1"]
custom_minimum_size = Vector2(75, 50)
layout_mode = 2
texture = ExtResource("3_1s8la")
expand_mode = 1
stretch_mode = 6

[node name="AltIcon" type="TextureRect" parent="ValueGroup/VBoxContainer/HBoxContainer" index="2"]
custom_minimum_size = Vector2(75, 50)
layout_mode = 2
texture = ExtResource("4_ke42t")
expand_mode = 1
stretch_mode = 6

[connection signal="focus_exited" from="ValueGroup/VBoxContainer/Button" to="." method="_on_focus_exit"]
[connection signal="toggled" from="ValueGroup/VBoxContainer/Button" to="." method="_on_button_toggled"]
